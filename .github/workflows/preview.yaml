name: preview
on: [ push, workflow_dispatch ]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  gds:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
    - name: uncompress gds
      run: |
        gunzip gds/user_project_wrapper.gds
    - name: populate gds cache
      uses: actions/cache@v2
      with:
        path: gds/user_project_wrapper.gds
        key: ${{ runner.os }}-gds-${{ github.run_id }}
  svg:
    needs:
    - gds
    runs-on: ubuntu-latest
    steps:
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: restore gds cache
      uses: actions/cache@v2
      with:
        path: gds/user_project_wrapper.gds
        key: ${{ runner.os }}-gds-${{ github.run_id }}
    - name: generate svg
      run: |
        python -m pip install gdstk
        python << EOF
        import pathlib
        import gdstk

        gds = pathlib.Path('gds/user_project_wrapper.gds')
        library = gdstk.read_gds(gds)
        top_cells = library.top_level()
        top_cells[0].write_svg('user_project_wrapper.svg')
        EOF
    - name: populate svg cache
      uses: actions/cache@v2
      with:
        path: user_project_wrapper.svg
        key: ${{ runner.os }}-svg-${{ github.run_id }}
  webgl:
    needs: gds
    # ubuntu
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        repository: s-holst/GDS2WebGL
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: restore gds cache
      uses: actions/cache@v2
      with:
        path: gds/user_project_wrapper.gds
        key: ${{ runner.os }}-gds-${{ github.run_id }}
    - name: GDS2WebGL
      run: |
        python -m pip install gdspy pyclipper mapbox_earcut
        python3 gds2webgl.py -i gds/user_project_wrapper.gds -o index.html
    - name: populate webgl cache
      uses: actions/cache@v2
      with:
        path: index.html
        key: ${{ runner.os }}-webgl-${{ github.run_id }}
  pages:
    needs:
    - svg
    - webgl
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: restore svg cache
      uses: actions/cache@v2
      with:
        path: user_project_wrapper.svg
        key: ${{ runner.os }}-svg-${{ github.run_id }}
    - name: restore webgl cache
      uses: actions/cache@v2
      with:
        path: index.html
        key: ${{ runner.os }}-webgl-${{ github.run_id }}
    - name: Setup Pages
      uses: actions/configure-pages@v2
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: '.'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
  preview:
    needs: pages
    runs-on: ubuntu-latest
    steps:
    - name: add gds preview
      run: |
        PAGE_URL=${{ needs.pages.outputs.page_url }}
        PAGE_URL=$(echo "$PAGE_URL" | sed -e 's/\/$//')
        cat << EOF >> $GITHUB_STEP_SUMMARY
        # svg

        ![svg]($PAGE_URL/user_project_wrapper.svg)

        # webgl

        [open preview]($PAGE_URL/index.html)
        EOF
